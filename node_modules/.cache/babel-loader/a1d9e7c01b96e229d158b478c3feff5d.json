{"ast":null,"code":"import _classCallCheck from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n\n  var _super = _createSuper(Transport);\n\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} options.\r\n   * @api private\r\n   */\n  function Transport(opts) {\n    var _this;\n\n    _classCallCheck(this, Transport);\n\n    _this = _super.call(this);\n    _this.writable = false;\n    installTimerFunctions(_assertThisInitialized(_this), opts);\n    _this.opts = opts;\n    _this.query = opts.query;\n    _this.readyState = \"\";\n    _this.socket = opts.socket;\n    return _this;\n  }\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} str\r\n   * @return {Transport} for chaining\r\n   * @api protected\r\n   */\n\n\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(msg, desc) {\n      var err = new Error(msg); // @ts-ignore\n\n      err.type = \"TransportError\"; // @ts-ignore\n\n      err.description = desc;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"error\", err);\n\n      return this;\n    }\n    /**\r\n     * Opens the transport.\r\n     *\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (\"closed\" === this.readyState || \"\" === this.readyState) {\n        this.readyState = \"opening\";\n        this.doOpen();\n      }\n\n      return this;\n    }\n    /**\r\n     * Closes the transport.\r\n     *\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n        this.doClose();\n        this.onClose();\n      }\n\n      return this;\n    }\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (\"open\" === this.readyState) {\n        this.write(packets);\n      } else {// this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\r\n     * Called upon open\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"open\");\n    }\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"packet\", packet);\n    }\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this.readyState = \"closed\";\n\n      _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"close\");\n    }\n  }]);\n\n  return Transport;\n}(Emitter);","map":{"version":3,"sources":["C:/Users/bmmul/IdeaProjects/regexame/node_modules/engine.io-client/build/esm/transport.js"],"names":["decodePacket","Emitter","installTimerFunctions","Transport","opts","writable","query","readyState","socket","msg","desc","err","Error","type","description","doOpen","doClose","onClose","packets","write","data","packet","binaryType","onPacket"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,WAAaC,SAAb;AAAA;;AAAA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACI,qBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACAH,IAAAA,qBAAqB,gCAAOE,IAAP,CAArB;AACA,UAAKA,IAAL,GAAYA,IAAZ;AACA,UAAKE,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,MAAL,GAAcJ,IAAI,CAACI,MAAnB;AAPc;AAQjB;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAtBA;AAAA;AAAA,WAuBI,iBAAQC,GAAR,EAAaC,IAAb,EAAmB;AACf,UAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,GAAV,CAAZ,CADe,CAEf;;AACAE,MAAAA,GAAG,CAACE,IAAJ,GAAW,gBAAX,CAHe,CAIf;;AACAF,MAAAA,GAAG,CAACG,WAAJ,GAAkBJ,IAAlB;;AACA,0EAAW,OAAX,EAAoBC,GAApB;;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;AApCA;AAAA;AAAA,WAqCI,gBAAO;AACH,UAAI,aAAa,KAAKJ,UAAlB,IAAgC,OAAO,KAAKA,UAAhD,EAA4D;AACxD,aAAKA,UAAL,GAAkB,SAAlB;AACA,aAAKQ,MAAL;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;AAhDA;AAAA;AAAA,WAiDI,iBAAQ;AACJ,UAAI,cAAc,KAAKR,UAAnB,IAAiC,WAAW,KAAKA,UAArD,EAAiE;AAC7D,aAAKS,OAAL;AACA,aAAKC,OAAL;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AA7DA;AAAA;AAAA,WA8DI,cAAKC,OAAL,EAAc;AACV,UAAI,WAAW,KAAKX,UAApB,EAAgC;AAC5B,aAAKY,KAAL,CAAWD,OAAX;AACH,OAFD,MAGK,CACD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;AA1EA;AAAA;AAAA,WA2EI,kBAAS;AACL,WAAKX,UAAL,GAAkB,MAAlB;AACA,WAAKF,QAAL,GAAgB,IAAhB;;AACA,0EAAW,MAAX;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AArFA;AAAA;AAAA,WAsFI,gBAAOe,IAAP,EAAa;AACT,UAAMC,MAAM,GAAGrB,YAAY,CAACoB,IAAD,EAAO,KAAKZ,MAAL,CAAYc,UAAnB,CAA3B;AACA,WAAKC,QAAL,CAAcF,MAAd;AACH;AACD;AACJ;AACA;AACA;AACA;;AA9FA;AAAA;AAAA,WA+FI,kBAASA,MAAT,EAAiB;AACb,0EAAW,QAAX,EAAqBA,MAArB;AACH;AACD;AACJ;AACA;AACA;AACA;;AAtGA;AAAA;AAAA,WAuGI,mBAAU;AACN,WAAKd,UAAL,GAAkB,QAAlB;;AACA,0EAAW,OAAX;AACH;AA1GL;;AAAA;AAAA,EAA+BN,OAA/B","sourcesContent":["import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} options.\r\n     * @api private\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.readyState = \"\";\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} str\r\n     * @return {Transport} for chaining\r\n     * @api protected\r\n     */\r\n    onError(msg, desc) {\r\n        const err = new Error(msg);\r\n        // @ts-ignore\r\n        err.type = \"TransportError\";\r\n        // @ts-ignore\r\n        err.description = desc;\r\n        super.emit(\"error\", err);\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     *\r\n     * @api public\r\n     */\r\n    open() {\r\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\r\n            this.readyState = \"opening\";\r\n            this.doOpen();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     *\r\n     * @api public\r\n     */\r\n    close() {\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     * @api public\r\n     */\r\n    send(packets) {\r\n        if (\"open\" === this.readyState) {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @api protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emit(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @api protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @api protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emit(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @api protected\r\n     */\r\n    onClose() {\r\n        this.readyState = \"closed\";\r\n        super.emit(\"close\");\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}