{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/bmmul/IdeaProjects/regexame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\r\n * Empty function\r\n */\n\nfunction empty() {}\n\nvar hasXHR2 = function () {\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nexport var XHR = /*#__PURE__*/function (_Polling) {\n  _inherits(XHR, _Polling);\n\n  var _super = _createSuper(XHR);\n\n  /**\r\n   * XHR Polling constructor.\r\n   *\r\n   * @param {Object} opts\r\n   * @api public\r\n   */\n  function XHR(opts) {\n    var _this;\n\n    _classCallCheck(this, XHR);\n\n    _this = _super.call(this, opts);\n\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\r\n     * XHR supports binary\r\n     */\n\n\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n  /**\r\n   * Creates a request.\r\n   *\r\n   * @param {String} method\r\n   * @api private\r\n   */\n\n\n  _createClass(XHR, [{\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this2 = this;\n\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", function (err) {\n        _this2.onError(\"xhr post error\", err);\n      });\n    }\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this3 = this;\n\n      var req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", function (err) {\n        _this3.onError(\"xhr poll error\", err);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n\n  return XHR;\n}(Polling);\nexport var Request = /*#__PURE__*/function (_Emitter) {\n  _inherits(Request, _Emitter);\n\n  var _super2 = _createSuper(Request);\n\n  /**\r\n   * Request constructor\r\n   *\r\n   * @param {Object} options\r\n   * @api public\r\n   */\n  function Request(uri, opts) {\n    var _this4;\n\n    _classCallCheck(this, Request);\n\n    _this4 = _super2.call(this);\n    installTimerFunctions(_assertThisInitialized(_this4), opts);\n    _this4.opts = opts;\n    _this4.method = opts.method || \"GET\";\n    _this4.uri = uri;\n    _this4.async = false !== opts.async;\n    _this4.data = undefined !== opts.data ? opts.data : null;\n\n    _this4.create();\n\n    return _this4;\n  }\n  /**\r\n   * Creates the XHR object and sends the request.\r\n   *\r\n   * @api private\r\n   */\n\n\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var _this5 = this;\n\n      var opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new XMLHttpRequest(opts);\n\n      try {\n        xhr.open(this.method, this.uri, this.async);\n\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {} // ie6 check\n\n\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n\n          if (200 === xhr.status || 1223 === xhr.status) {\n            _this5.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            _this5.setTimeoutFn(function () {\n              _this5.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(function () {\n          _this5.onError(e);\n        }, 0);\n        return;\n      }\n\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\r\n     * Called upon successful response.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess() {\n      this.emit(\"success\");\n      this.cleanup();\n    }\n    /**\r\n     * Called if we have data.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      this.emit(\"data\", data);\n      this.onSuccess();\n    }\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emit(\"error\", err);\n      this.cleanup(true);\n    }\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n\n      this.xhr.onreadystatechange = empty;\n\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n\n      this.xhr = null;\n    }\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @api private\r\n     */\n\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n\n      if (data !== null) {\n        this.onData(data);\n      }\n    }\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n\n  return Request;\n}(Emitter);\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\n\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/bmmul/IdeaProjects/regexame/node_modules/engine.io-client/build/esm/transports/polling-xhr.js"],"names":["XMLHttpRequest","globalThis","installTimerFunctions","pick","Emitter","Polling","empty","hasXHR2","xhr","xdomain","responseType","XHR","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","Object","assign","Request","uri","data","fn","req","request","method","on","err","onError","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","emit","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"mappings":"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","sourcesContent":["/* global attachEvent */\r\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\r\nimport globalThis from \"../globalThis.js\";\r\nimport { installTimerFunctions, pick } from \"../util.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { Polling } from \"./polling.js\";\r\n/**\r\n * Empty function\r\n */\r\nfunction empty() { }\r\nconst hasXHR2 = (function () {\r\n    const xhr = new XMLHttpRequest({\r\n        xdomain: false\r\n    });\r\n    return null != xhr.responseType;\r\n})();\r\nexport class XHR extends Polling {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @api public\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n            this.xs = opts.secure !== isSSL;\r\n        }\r\n        /**\r\n         * XHR supports binary\r\n         */\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n    }\r\n    /**\r\n     * Creates a request.\r\n     *\r\n     * @param {String} method\r\n     * @api private\r\n     */\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\r\n        return new Request(this.uri(), opts);\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @api private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", err => {\r\n            this.onError(\"xhr post error\", err);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @api private\r\n     */\r\n    doPoll() {\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", err => {\r\n            this.onError(\"xhr poll error\", err);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nexport class Request extends Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @api public\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.method = opts.method || \"GET\";\r\n        this.uri = uri;\r\n        this.async = false !== opts.async;\r\n        this.data = undefined !== opts.data ? opts.data : null;\r\n        this.create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @api private\r\n     */\r\n    create() {\r\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this.opts.xd;\r\n        opts.xscheme = !!this.opts.xs;\r\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\r\n        try {\r\n            xhr.open(this.method, this.uri, this.async);\r\n            try {\r\n                if (this.opts.extraHeaders) {\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this.opts.extraHeaders) {\r\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this.method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this.opts.withCredentials;\r\n            }\r\n            if (this.opts.requestTimeout) {\r\n                xhr.timeout = this.opts.requestTimeout;\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this.onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            xhr.send(this.data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this.onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this.index = Request.requestsCount++;\r\n            Request.requests[this.index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon successful response.\r\n     *\r\n     * @api private\r\n     */\r\n    onSuccess() {\r\n        this.emit(\"success\");\r\n        this.cleanup();\r\n    }\r\n    /**\r\n     * Called if we have data.\r\n     *\r\n     * @api private\r\n     */\r\n    onData(data) {\r\n        this.emit(\"data\", data);\r\n        this.onSuccess();\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @api private\r\n     */\r\n    onError(err) {\r\n        this.emit(\"error\", err);\r\n        this.cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @api private\r\n     */\r\n    cleanup(fromError) {\r\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n            return;\r\n        }\r\n        this.xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this.xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this.index];\r\n        }\r\n        this.xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @api private\r\n     */\r\n    onLoad() {\r\n        const data = this.xhr.responseText;\r\n        if (data !== null) {\r\n            this.onData(data);\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @api public\r\n     */\r\n    abort() {\r\n        this.cleanup();\r\n    }\r\n}\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}